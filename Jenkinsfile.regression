/**
 * Jenkins Pipeline for Full Regression Tests
 * Author: SAHRAOUI Abdelhakim
 * Email: Hakimsahraoui.de@gmail.com
 * Runs: ALL tests (Sanity + Regression + End-to-End)
 */

pipeline {
    agent any
    
    // NOTE: Si NodeJS plugin n'est pas installé, le Node.js du système sera utilisé
    
    environment {
        CI = 'true'
        PATH = "C:\\Program Files\\nodejs;${PATH}"  // Adjust based on your Node.js installation
    }
    
    parameters {
        choice(
            name: 'TEST_SUITE',
            choices: ['sanity', 'regression', 'all'],
            description: 'Select test suite to run'
        )
    }
    
    stages {
        stage('📥 Checkout') {
            steps {
                echo "� Cloning repository..."
                checkout scm
            }
        }
        
        stage('✅ Verify Environment') {
            steps {
                echo "� Verifying environment..."
                bat '''
                    echo Node.js version:
                    node --version
                    echo.
                    echo npm version:
                    npm --version
                '''
            }
        }
        
        stage('📦 Setup') {
            steps {
                echo "📦 Installing dependencies..."
                bat 'npm ci'
                bat "npx playwright install chromium"
            }
        }
        
        stage('🧪 Execute Tests') {
            steps {
                script {
                    echo "🧪 Running ${params.TEST_SUITE} tests..."
                    
                    try {
                        if (params.TEST_SUITE == 'sanity') {
                            bat "npx playwright test --grep @sanity"
                        } else if (params.TEST_SUITE == 'regression') {
                            bat "npx playwright test --grep @regression"
                        } else {
                            bat "npx playwright test"
                        }
                    } catch (Exception e) {
                        echo "⚠️ Tests failed, continuing to generate reports..."
                    }
                }
            }
        }
        
        stage('📊 Generate Reports') {
            steps {
                echo "📊 Generating Allure report..."
                script {
                    try {
                        bat 'npm run allure:generate'
                    } catch (Exception e) {
                        echo "⚠️ Allure generation skipped"
                    }
                }
            }
        }
    }
    
    post {
        always {
            echo '📊 Archiving test artifacts...'
            
            archiveArtifacts artifacts: 'playwright-report/**/*', allowEmptyArchive: true
            archiveArtifacts artifacts: 'allure-report/**/*', allowEmptyArchive: true
            archiveArtifacts artifacts: 'test-results/**/*', allowEmptyArchive: true
            
            echo '✅ Build artifacts archived successfully!'
        }
        
        success {
            echo "✅ ${params.TEST_SUITE} tests passed! 🎉"
        }
        
        failure {
            echo "❌ ${params.TEST_SUITE} tests failed!"
        }
    }
}
