# Playwright E2E Test Automation for OpenCart
# Author: SAHRAOUI Abdelhakim
# Framework: Playwright + TypeScript + Page Object Model
#
# ⚠️ CI/CD TEMPORARILY DISABLED ⚠️
# Reason: No publicly available OpenCart Docker image exists
# OpenCart requires local installation on localhost:80
# 
# To enable CI/CD, you need to:
# 1. Deploy OpenCart to a public URL (Heroku, AWS, Azure, etc.)
# 2. Update baseURL in playwright.config.ts
# 3. Remove the "if: false" condition below

name: 🎭 Playwright E2E Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual trigger from GitHub UI

jobs:
  test:
    name: Run Playwright Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    if: false  # 🛑 DISABLED - Enable when OpenCart is deployed publicly
    
    strategy:
      fail-fast: false  # Continue running other jobs even if one fails
      matrix:
        browser: [chromium]  # Can add: firefox, webkit
    
    steps:
    # Checkout code
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    # Setup Node.js
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'  # Match your local version
        cache: 'npm'
    
    # Install dependencies
    - name: 📦 Install Dependencies
      run: npm ci
    
    # Start OpenCart with Docker Compose
    - name: 🐳 Start OpenCart Container
      run: |
        # Create docker-compose.yml for OpenCart
        cat > docker-compose.yml << 'EOF'
        services:
          mysql:
            image: mysql:5.7
            environment:
              MYSQL_ROOT_PASSWORD: root
              MYSQL_DATABASE: opencart
              MYSQL_USER: opencart
              MYSQL_PASSWORD: opencart
            healthcheck:
              test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
              interval: 5s
              timeout: 3s
              retries: 20
            volumes:
              - mysql-data:/var/lib/mysql
          
          opencart:
            image: jonbaldie/opencart:latest
            ports:
              - "80:80"
            environment:
              DB_HOSTNAME: mysql
              DB_USERNAME: opencart
              DB_PASSWORD: opencart
              DB_DATABASE: opencart
              DB_PORT: 3306
              DB_PREFIX: oc_
            depends_on:
              mysql:
                condition: service_healthy
            healthcheck:
              test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"]
              interval: 10s
              timeout: 5s
              retries: 30
              start_period: 30s
        
        volumes:
          mysql-data:
        EOF
        
        # Start containers
        docker compose up -d
        
        # Wait for OpenCart to be fully ready
        echo "⏳ Waiting for OpenCart to be ready..."
        timeout 300 bash -c 'until curl -sf http://localhost:80 > /dev/null; do echo "Waiting..."; sleep 5; done'
        echo "✅ OpenCart is ready!"
    
    # Install Playwright browsers
    - name: 🎭 Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
    
    # Run Playwright tests
    - name: 🧪 Run Playwright Tests (${{ matrix.browser }})
      run: npx playwright test --project=${{ matrix.browser }}
      continue-on-error: false
    
    # Upload test results on failure
    - name: 📸 Upload Test Results (Screenshots & Videos)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.browser }}
        path: test-results/
        retention-days: 30
    
    # Upload HTML report
    - name: 📊 Upload Playwright HTML Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 30
    
    # Upload Allure results
    - name: 📈 Upload Allure Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-results-${{ matrix.browser }}
        path: allure-results/
        retention-days: 30
    
    # Generate test summary
    - name: 📋 Test Summary
      if: always()
      run: |
        echo "## 🎭 Playwright Test Results (${{ matrix.browser }})" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Browser**: ${{ matrix.browser }}" >> $GITHUB_STEP_SUMMARY
        echo "- **OS**: Ubuntu Latest" >> $GITHUB_STEP_SUMMARY
        echo "- **Node Version**: 22.x" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📊 View detailed reports in the artifacts section" >> $GITHUB_STEP_SUMMARY
